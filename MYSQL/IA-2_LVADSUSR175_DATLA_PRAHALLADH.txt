1.) SELECT machine_id FROM l1_maintenance_records WHERE YEAR(maintenance_date) = 2024 AND MONTH(maintenance_date) = 3 AND cost > (SELECT AVG(cost) FROM l1_maintenance_records WHERE YEAR(maintenance_date) = 2024 AND MONTH(maintenance_date) = 3);

2.) SELECT maintenance_type,COUNT(*) FROM l1_maintenance_records GROUP BY maintenance_type ORDER BY COUNT(*) DESC LIMIT 1;

3.) SELECT technician_name,COUNT(*) FROM l1_maintenance_records GROUP BY technician_name order by COUNT(*) DESC LIMIT 1 ;
    SELECT technician_name,AVG(cost) FROM l1_maintenance_records WHERE YEAR(maintenance_date) = 2024 AND MONTH(maintenance_date) = 3 GROUP BY technician_name ;

4.) SELECT product_id,AVG(incident_count_pre_update - incident_count_post_update)  AS AVG_REDUCTION FROM l2_updates
GROUP BY product_id;

5.) SELECT update_id,MAX(user_feedback_score) AS FEEDBACK_SCORE  FROM l2_updates GROUP BY update_id ORDER BY MAX(user_feedback_score) DESC LIMIT 1 ;

6.) SELECT product_id,DIFF FROM (SELECT product_id,SUM(incident_count_pre_update) AS PRE,SUM(incident_count_post_update) AS POST,SUM(incident_count_pre_update)-SUM(incident_count_post_update) AS DIFF FROM l2_updates GROUP BY product_id) AS T  WHERE DIFF = MIN(DIFF); 


7.) SELECT P.patient_id,F.facility_id,GROUP_CONCAT(P.patient_name),GROUP_CONCAT(F.facility_name),
GROUP_CONCAT(V.reason_for_visit),GROUP_CONCAT(T.outcome) 
from l3_patients P JOIN l3_visits V USING(patient_id)
JOIN l3_treatments T USING(visit_id) JOIN l3_facilities F USING (facility_id) 
where YEAR(visit_date) = 2024 AND MONTH(visit_date) = 3 GROUP BY P.patient_id, F.facility_id HAVING COUNT(V.visit_id) >1

8.) SELECT facility_id,COUNT(visit_id) FROM l3_visits  JOIN l3_facilities USING (facility_id) WHERE YEAR(visit_date) = 2024 AND MONTH(visit_date) = 3 AND reason_for_visit = "Emergency" GROUP BY facility_id;

9.) SELECT insurance_provider,COUNT(visit_id) FROM l3_visits JOIN l3_treatments USING (visit_id) JOIN l3_patients USING (patient_id) where  QUARTER(visit_date) = 1 AND outcome = "Complicated" GROUP BY insurance_provider ORDER BY COUNT(visit_id) DESC LIMIT 1;

10.) SELECT product_id, SUM(quantity) FROM  l4_sales WHERE YEAR(sale_date) = 2024 AND MONTH (sale_date) = 3 GROUP BY product_id; 

11.) CREATE VIEW V2 AS  SELECT *, SUM(quantity*price) AS S FROM l4_sales 
JOIN l4_stores USING (store_id) JOIN l4_products USING (product_id) GROUP BY region ;

SELECT region,S FROM V2 WHERE YEAR (sale_date) = 2024 AND QUARTER(sale_date) = 1 ORDER BY S LIMIT 1

12.) SELECT product_id,region FROM l4_products FULL OUTER JOIN l4_sales USING (product_id) WHERE sale_id IS NULL ;