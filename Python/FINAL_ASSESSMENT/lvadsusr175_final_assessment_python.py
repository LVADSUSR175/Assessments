# -*- coding: utf-8 -*-
"""LVADSUSR175_FINAL_ASSESSMENT_PYTHON.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hnd1KmTENHX6knyUoi5o5yIer94doaHH
"""

# importing necessary libraries
# 1.)
import pandas as pd
df = pd.read_csv("/content/Final Dataset - IPL.csv")
df.head(2) # checking the data
df.shape # rows and columns
df.size
df.info() # gives us the breif about our data and it's structure
df.dtypes # column - datatype
df.isna() # null values are present or not
df.describe() # stats

#2.)
df.isna() # checking for null values
df["match_id"].isna() # checking for null values on a specific column
df["match_winner"].isna()
df["player_of_the_match"].isna()
#From all these we can say that there are no null values in the dataset
df.duplicated() # checking for duplicates
# as we can from the above method output there are no duplicates
df["match_id"].duplicated() # checking for duplicates in match_id column which is very importnat for our analysis
df["date"].duplicated()
# we got some duplicates in this column but as it is the date and there can be instance where two or more matches can be played on the same day
# so I have decide not to remove the duplicates from date column.
# As our main column is match_id and as it doesn't have any duplicates we don't need to check further and continue in our analysis.

# 3
# Descriptive Statistics
df.describe() # will give you the count, mean,std,min,max,Quartile values of each numerical type columns
df.head(2)
df["highscore"].mode() # gives us the mode of highscore
df["highscore"].median() # gives us the median highscore of all the matches
df["first_ings_score"].median() # gives us the median score in first innings
# Using all these methods .describe(),.mode(),.median() we can get the different statistical data of our numerical values.

# 4
# Data Visualization

#df_chennai = df[df["match_winner"] == "Chennai"] # filtering out the dataFrame where matches won by chennai over the years
#df_chennai
# TOP 4 TEAMS WHO WON MORE MATCHES
df_match_winner = df.groupby(["match_winner"])["match_id"].count().to_frame("NO_OF_TIMES_WON").reset_index().sort_values(by = "NO_OF_TIMES_WON",ascending = False).head(4)
df_match_winner
import matplotlib.pyplot as plt
import seaborn as sns
x1 = df_match_winner["match_winner"]
y1 = df_match_winner["NO_OF_TIMES_WON"]
plt.bar(x1,y1)
plt.title("TOP 4 TEAMS ")
plt.xlabel("Teams")
plt.ylabel("Matches WON")
plt.show()

# No_of_matches_conducted_in_each_venue
df_venue_count = df.groupby(["venue"])["match_id"].count().to_frame("VENUE_N").reset_index().sort_values(by = "VENUE_N",ascending = False).head(3)
df_venue_count
import matplotlib.pyplot as plt
import seaborn as sns
x2 = df_venue_count["venue"]
y2 = df_venue_count["VENUE_N"]
plt.bar(x2,y2)
plt.title("NO_of_MATCHES")
plt.xlabel("Venue")
plt.ylabel("Matches Played")
plt.show()

# Pie Chart
# Distribution of Toss Decision
plt.figure(figsize=(7, 5))
df['toss_decision'].value_counts().plot.pie(autopct='%1.1f%%')
plt.title('Distribution of Toss_decision')
plt.ylabel('')
plt.show()

# scatterplot
plt.figure(figsize=(10, 6))
sns.scatterplot(x='toss_winner', y='match_winner', data=df, alpha=0.6)
plt.title('Toss Winner vs. Match Winner')
plt.xlabel('Toss_Winner')
plt.ylabel('Match_Winer')
plt.show()

# histogram
# distribution of high score
plt.hist(df["best_bowling_figure"])
plt.show()

# BoxPlot
plt.figure(figsize=(10, 6))
sns.boxplot(x='first_ings_score', y='second_ings_score', hue='match_winner', data=df)
plt.title('Match Winner innings score')
plt.xlabel('first_innings')
plt.ylabel('Second innings')
plt.show()

# 5,6
# Correlation and Outliers
#corr() method can be used to find out the correlation between two columns
# I want know the correlation or is their any relation between the toss winner and match winner
print(df["first_ings_score"].corr(df["first_ings_wkts"]))
# we got the relation between them at -5 that means there is a very little relation
print(df["second_ings_score"].corr(df["second_ings_wkts"]))
#print(df["won_by"].corr(df["match_winner"]))
#df.dtypes
plt.figure(figsize=(10, 6))
sns.scatterplot(x='toss_winner', y='match_winner', data=df, alpha=0.6)
plt.title('Toss Winner vs. Match Winner')
plt.xlabel('Toss_Winner')
plt.ylabel('Match_Winer')
plt.show()
# scatterplot gives the relationship between the Toss Winner and Match Winner
# There is a minimal chance of winning the game if you win the toss for most of the teams
#As we can see from the there are no outliers present in the data for the relationship we want.
# As there are no outliers in this we don't have to  make any changes.

# 7
df_7 = df.groupby(["match_winner","venue"])["match_id"].count().reset_index().sort_values(by = "match_id",ascending = False).head(4)
df_7
import matplotlib.pyplot as plt
import seaborn as sns
x7 = df_7["match_winner"]
y7 = df_7["match_id"]
plt.bar(x7,y7)
plt.title("TOP 4 Teams ")
plt.xlabel("Teams")
plt.ylabel("Matches WON IN THE SAME LOCATION ")
plt.show()
# from the above groupby and chart we can see that there are many teams which won more matches in specific venues or lcatiosn
# so playing at a specific condition did work well for few teams
df_8 = df.groupby(["venue",])["player_of_the_match"].count().reset_index().sort_values(by = "player_of_the_match",ascending = False).head(4)
df_8
# As we can see from the above group few individual players played well in specific locations

# 8
df_9 = df.groupby(["player_of_the_match"])["match_id"].count().reset_index().sort_values(by = "match_id",ascending = False).head(4)
df_9
import matplotlib.pyplot as plt
import seaborn as sns
x9 = df_9["player_of_the_match"]
y9 = df_9["match_id"]
plt.bar(x9,y9)
plt.title("TOP Player_of_the_Match ")
plt.xlabel("Player Name")
plt.ylabel("Matches ")
plt.show()
# We can see that Kuldeep Yadav has won the most Player of the matches award in all the games
df_10 = df.groupby(["top_scorer"])["match_id"].count().reset_index().sort_values(by = "match_id",ascending = False).head(4)
df_10
import matplotlib.pyplot as plt
import seaborn as sns
x10 = df_10["top_scorer"]
y10 = df_10["match_id"]
plt.bar(x10,y10)
plt.title("TOP SCORER ")
plt.xlabel("Player Name")
plt.ylabel("Matches")
plt.show()
# Jos Buttler is the top scorer in the max of games
df_11 = df.groupby(["best_bowling"])["match_id"].count().reset_index().sort_values(by = "match_id",ascending = False).head(4)
df_11
x11 = df_11["best_bowling"]
y11 = df_11["match_id"]
plt.title("Best Bowler")
plt.xlabel("Player Name")
plt.ylabel("Matches ")
plt.bar(x11,y11)
plt.show()
# Y Chahal is the best bowler

# 9
# We can see from the analysis that Kuldeep Yadav has won the most Player of the matches award in all the games played in IPL 2022
#There can be many reasons why he is the top winner one can be of venue, as we can see from the previous analysis, venue played a key role for some teams they playd well in specific venues
# Jos Buttler received the most  top scorer awards among all the players in the IPL 2022
# Y chahal received the most BEST Bowler award among all the players in the IPL 2022